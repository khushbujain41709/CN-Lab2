# Create a simulator object 
set ns [new Simulator]

# Open the NAM trace file 
set nf [open out.nam w]
$ns namtrace-all $nf

# Define a 'finish' procedure 
proc finish {} {
    global ns nf
    $ns flush-trace
    close $nf
    exec nam out.nam &
    exit 0
}

# Create six nodes (for a ring topology)
set n0 [$ns node]
set n1 [$ns node]
set n2 [$ns node]
set n3 [$ns node]
set n4 [$ns node]
set n5 [$ns node]

# Create duplex links to form a ring topology
$ns duplex-link $n0 $n1 1Mb 10ms DropTail
$ns duplex-link $n1 $n2 1Mb 10ms DropTail
$ns duplex-link $n2 $n3 1Mb 10ms DropTail
$ns duplex-link $n3 $n4 1Mb 10ms DropTail
$ns duplex-link $n4 $n5 1Mb 10ms DropTail
$ns duplex-link $n5 $n0 1Mb 10ms DropTail

# Create a TCP agent and attach it to node n1
set tcp0 [new Agent/TCP]
$tcp0 set class_ 1
$ns attach-agent $n1 $tcp0

# Create a TCP Sink agent and attach it to node n3
set sink0 [new Agent/TCPSink]
$ns attach-agent $n3 $sink0

# Connect the TCP source to the sink
$ns connect $tcp0 $sink0

# Create a CBR application over TCP
set cbr0 [new Application/Traffic/CBR]
$cbr0 set packetSize_ 500
$cbr0 set interval_ 0.01
$cbr0 attach-agent $tcp0

# Schedule events for CBR start and stop
$ns at 0.5 "$cbr0 start"
$ns at 4.5 "$cbr0 stop"

# Call the finish procedure at 5 seconds
$ns at 5.0 "finish"

# Run the simulation
$ns run
